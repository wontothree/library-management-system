package com.cruds.gui;

import com.cruds.db.BookDAO;

import com.cruds.model.Book;
import com.cruds.model.Member;
import com.cruds.model.Issue;
import com.cruds.model.Group;
import com.cruds.model.Club;

//import com.cruds.model.Author;
//import com.cruds.model.Student;

import java.awt.CardLayout;
import java.util.Calendar;
import java.util.Date;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class MainFrame extends javax.swing.JFrame {

    // Creates new form MainFrame
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        // [sidebar] button
        btnAddBook = new javax.swing.JButton();
        btnSearchBook = new javax.swing.JButton();
        btnListBooks = new javax.swing.JButton();
        btnIssueBook = new javax.swing.JButton();
        btnListIssuedBooks = new javax.swing.JButton();
        btnReturnToday = new javax.swing.JButton();
        btnJoinGroupClub = new javax.swing.JButton();
        btnReserveRoom = new javax.swing.JButton();
        btnSignUp = new javax.swing.JButton();

        // panel
        mainPanel = new javax.swing.JPanel();
        panelAddBook = new javax.swing.JPanel();
        panelSearchBook = new javax.swing.JPanel();
        panelIssuedBooks = new javax.swing.JPanel();
        panelJoinGroupClub = new javax.swing.JPanel();
        panelReserveRoom = new javax.swing.JPanel();
        panelSignUp = new javax.swing.JPanel();

        // [Page] Add Book
        titleLabel = new javax.swing.JLabel();
        authorLabel = new javax.swing.JLabel();
        publisherLabel = new javax.swing.JLabel();
        publicationDateLabel = new javax.swing.JLabel();
        purchaseDateLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        categoryLabel = new javax.swing.JLabel();
        domesticLabel = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        txtAuthorName = new javax.swing.JTextField();
        txtPublisher = new javax.swing.JTextField();
        txtPublicationDate = new javax.swing.JTextField();
        txtPurchaseDate = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtCategory = new javax.swing.JTextField();
        txtDomestic = new javax.swing.JTextField();
        comboBoxCategory = new javax.swing.JComboBox<>();
        comboBoxDomestic = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();

        // [Page] sign up / withdrawal
        signUpLabel = new javax.swing.JLabel();
        memberIdLabel = new javax.swing.JLabel();
        fullNameLabel = new javax.swing.JLabel();
        phoneNumberLabel = new javax.swing.JLabel();
        streetAddressLabel = new javax.swing.JLabel();
        emailAddressLabel = new javax.swing.JLabel();
        withdrawalLabel = new javax.swing.JLabel();
        withdrawalIDLabel = new javax.swing.JLabel();
        txtMemberId = new javax.swing.JTextField();
        txtFullName = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        txtStreetAddress = new javax.swing.JTextField();
        txtEmailAddress = new javax.swing.JTextField();
        txtWithdrawalID = new javax.swing.JTextField();
        btnAddAccount = new javax.swing.JButton();
        btnWithdrawal = new javax.swing.JButton();
        btnMonthEndSettlement = new javax.swing.JButton();

        // [page] join group / club
        joinGroupLabel = new javax.swing.JLabel();
        joinclubLabel = new javax.swing.JLabel();
        groupIdLabel = new javax.swing.JLabel();
        groupMemberIdLabel = new javax.swing.JLabel();
        groupMemberAgeLabel = new javax.swing.JLabel();
        clubIdLabel = new javax.swing.JLabel();
        clubNameLabel = new javax.swing.JLabel();
        clubRepresentativeNameLabel = new javax.swing.JLabel();
        clubHeadCountLabel = new javax.swing.JLabel();
        clubAverageAgeLabel = new javax.swing.JLabel();
        txtGroupId = new javax.swing.JTextField();
        txtGroupMemberId = new javax.swing.JTextField();
        txtGroupMemberAge = new javax.swing.JTextField();
        txtClubId = new javax.swing.JTextField();
        txtClubName = new javax.swing.JTextField();
        txtClubRepresentativeName = new javax.swing.JTextField();
        txtClubHeadCount = new javax.swing.JTextField();
        txtClubAverageAge = new javax.swing.JTextField();
        btnJoinGroup = new javax.swing.JButton();
        btnJoinClub = new javax.swing.JButton();

        // [page] reserve room
        reserveRoomLabel = new javax.swing.JLabel();

        comboBoxSearchBy = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        searchScrollPane = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        panelListBooks = new javax.swing.JPanel();
        scrollPaneBookAuthor = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        panelIssueBook = new javax.swing.JPanel();
        txtSearchBook = new javax.swing.JTextField();
        ComboBoxSearchBook = new javax.swing.JComboBox<>();
        btnSearchBookIssue = new javax.swing.JButton();
        bookScrollPane = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        searchBookLabel = new javax.swing.JLabel();
        searchStudentLabel = new javax.swing.JLabel();
        txtUsnSearch = new javax.swing.JTextField();
        usnLabel = new javax.swing.JLabel();
        studentScrollPane = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        btnIssue = new javax.swing.JButton();
        btnSearchBookIssue1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        scrollPaneIssuedBooks = new javax.swing.JScrollPane();
        issuedBooksTable = new javax.swing.JTable();
        btnReturn = new javax.swing.JButton();
        labelUsn2 = new javax.swing.JLabel();
        txtUsn = new javax.swing.JTextField();
        btnSearchByUsn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        panelReturnToday = new javax.swing.JPanel();
        scrollPaneReturnToday = new javax.swing.JScrollPane();
        returnTodayTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        jLabel3 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library Management System");

        // list new books

        bookAuthorTable = new javax.swing.JTable();
        
        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // card layout manager
        mainPanel.setLayout(new java.awt.CardLayout());

        // set size
        panelSearchBook.setPreferredSize(new java.awt.Dimension(1000, 600));

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // [page] Add Book

        // book title
        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        titleLabel.setText("Book Title");
        txtTitle.setFont(new java.awt.Font("Tahoma", 0, 14));

        // author name
        authorLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        authorLabel.setText("Author Name");
        txtAuthorName.setFont(new java.awt.Font("Tahoma", 0, 14));

        // publisher
        publisherLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        publisherLabel.setText("Publisher");
        txtPublisher.setFont(new java.awt.Font("Tahoma", 0, 14));

        // publication date
        publicationDateLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        publicationDateLabel.setText("Publication Date");
        txtPublicationDate.setFont(new java.awt.Font("Tahoma", 0, 14));

        // purchase date
        purchaseDateLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        purchaseDateLabel.setText("Purchase Date");
        txtPurchaseDate.setFont(new java.awt.Font("Tahoma", 0, 14));

        // id
        idLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        idLabel.setText("Book ID");
        txtId.setFont(new java.awt.Font("Tahoma", 0, 14));

        // category
        categoryLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        categoryLabel.setText("Category");
        txtCategory.setFont(new java.awt.Font("Tahoma", 0, 14));
        comboBoxCategory.setFont(new java.awt.Font("Tahoma", 0, 14));
        comboBoxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Science", "Humanity" }));
        comboBoxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCategoryActionPerformed(evt);
            }
        });

        // domestic
        domesticLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        domesticLabel.setText("Domestic/Foreign");
        txtDomestic.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboBoxDomestic.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboBoxDomestic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Domestic", "Foreign" }));
        comboBoxDomestic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxDomesticActionPerformed(evt);
            }
        });

        // [button] add
        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdd.setText("Add ");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(219, 68, 85));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Add Book");

        // positioning ui
        javax.swing.GroupLayout panelAddBookLayout = new javax.swing.GroupLayout(panelAddBook);
        panelAddBook.setLayout(panelAddBookLayout);
        panelAddBookLayout.setHorizontalGroup(
                panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelAddBookLayout.createSequentialGroup()
                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelAddBookLayout.createSequentialGroup()

                                                .addGap(100, 100, 100)
                                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(authorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(publisherLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(publicationDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(purchaseDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(idLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(categoryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(domesticLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        )
                                                )

                                                .addGap(18, 18, 18)
                                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(txtTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                        .addComponent(txtAuthorName)
                                                        .addComponent(txtPublisher)
                                                        .addComponent(txtPublicationDate)
                                                        .addComponent(txtPurchaseDate)
                                                        .addComponent(txtId)
                                                        .addGroup(panelAddBookLayout.createSequentialGroup()
                                                                .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(comboBoxCategory, 0, 1, Short.MAX_VALUE)
                                                        )
                                                        .addGroup(panelAddBookLayout.createSequentialGroup()
                                                                .addComponent(txtDomestic, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(comboBoxDomestic, 0, 1, Short.MAX_VALUE)
                                                        )
                                                )
                                        )

                                        .addGroup(panelAddBookLayout.createSequentialGroup()
                                                .addGap(279, 279, 279)
                                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelAddBookLayout.createSequentialGroup()
                                                .addGap(265, 265, 265)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(474, Short.MAX_VALUE))
        );
        panelAddBookLayout.setVerticalGroup(
                panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelAddBookLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)

                                // book title
                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtTitle)
                                        .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // author name
                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(authorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtAuthorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)

                                // publisher
                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(publisherLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)

                                // publication date
                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(publicationDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPublicationDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)

                                // purchase date
                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(purchaseDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPurchaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)

                                // book id
                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)

                                // category
                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(comboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)

                                // domestic
                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(domesticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtDomestic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(comboBoxDomestic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)

                                .addGroup(panelAddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                )
                                .addGap(25, 25, 25)
                                .addComponent(btnAdd)
                                .addContainerGap(205, Short.MAX_VALUE))
        );

        mainPanel.add(panelAddBook, "panelAddBook");
        panelAddBook.getAccessibleContext().setAccessibleName("");
        panelAddBook.getAccessibleContext().setAccessibleDescription("");

        btnLogout.setBackground(new java.awt.Color(204, 204, 204));
        btnLogout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // [page] search book

        // combobox
        comboBoxSearchBy.setFont(new java.awt.Font("Tahoma", 0, 14));
        comboBoxSearchBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "Category", "Author", "Book ID" }));
        comboBoxSearchBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSearchByActionPerformed(evt);
            }
        });

        // [table]
        searchTable.setFont(new java.awt.Font("Tahoma", 0, 14));
        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Book Title", "Category", "Quantity", "Author"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchTable.setRowHeight(20);
        searchScrollPane.setViewportView(searchTable);
        if (searchTable.getColumnModel().getColumnCount() > 0) {
            searchTable.getColumnModel().getColumn(0).setPreferredWidth(20);
            searchTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            searchTable.getColumnModel().getColumn(3).setPreferredWidth(20);
        }

        // [button] search
        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        // label
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 204));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Search Book");

        javax.swing.GroupLayout panelSearchBookLayout = new javax.swing.GroupLayout(panelSearchBook);
        panelSearchBook.setLayout(panelSearchBookLayout);
        panelSearchBookLayout.setHorizontalGroup(
            panelSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchBookLayout.createSequentialGroup()
                .addGroup(panelSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSearchBookLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(panelSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearch)
                            .addGroup(panelSearchBookLayout.createSequentialGroup()
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboBoxSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(searchScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelSearchBookLayout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        panelSearchBookLayout.setVerticalGroup(
            panelSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSearchBookLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
        );
        
        mainPanel.add(panelSearchBook, "panelSearchBook");

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // [page] list new books

        scrollPaneBookAuthor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        // table
        bookAuthorTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bookAuthorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            // column name
            new String [] {
                "ID", "Title", "Author", "Publisher", "Publication Date", "Purchase Date", "Category", "Domestic/Foreign"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

        bookAuthorTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        bookAuthorTable.setIntercellSpacing(new java.awt.Dimension(2, 1));
        bookAuthorTable.setRowHeight(18);
        scrollPaneBookAuthor.setViewportView(bookAuthorTable);

        bookAuthorTable.getColumnModel().getColumn(0).setMinWidth(50);
        bookAuthorTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        bookAuthorTable.getColumnModel().getColumn(0).setMaxWidth(50);

        bookAuthorTable.getColumnModel().getColumn(1).setMinWidth(200);
        bookAuthorTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        bookAuthorTable.getColumnModel().getColumn(1).setMaxWidth(300);

        bookAuthorTable.getColumnModel().getColumn(2).setMinWidth(50);
        bookAuthorTable.getColumnModel().getColumn(2).setPreferredWidth(80);
        bookAuthorTable.getColumnModel().getColumn(2).setMaxWidth(100);

        bookAuthorTable.getColumnModel().getColumn(3).setMinWidth(50);
        bookAuthorTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        bookAuthorTable.getColumnModel().getColumn(3).setMaxWidth(50);

        bookAuthorTable.getColumnModel().getColumn(4).setMinWidth(150);
        bookAuthorTable.getColumnModel().getColumn(4).setPreferredWidth(150);
        bookAuthorTable.getColumnModel().getColumn(4).setMaxWidth(150);

        bookAuthorTable.getColumnModel().getColumn(5).setMinWidth(150);
        bookAuthorTable.getColumnModel().getColumn(5).setPreferredWidth(150);
        bookAuthorTable.getColumnModel().getColumn(5).setMaxWidth(150);

        bookAuthorTable.getColumnModel().getColumn(6).setMinWidth(80);
        bookAuthorTable.getColumnModel().getColumn(6).setPreferredWidth(80);
        bookAuthorTable.getColumnModel().getColumn(6).setMaxWidth(100);

        bookAuthorTable.getColumnModel().getColumn(7).setMinWidth(30);
        bookAuthorTable.getColumnModel().getColumn(7).setPreferredWidth(30);
        bookAuthorTable.getColumnModel().getColumn(7).setMaxWidth(30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel1.setForeground(new java.awt.Color(204, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("List of New Books");

        javax.swing.GroupLayout panelListBooksLayout = new javax.swing.GroupLayout(panelListBooks);
        panelListBooks.setLayout(panelListBooksLayout);
        panelListBooksLayout.setHorizontalGroup(
            panelListBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListBooksLayout.createSequentialGroup()
                .addGroup(panelListBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelListBooksLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(scrollPaneBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelListBooksLayout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        panelListBooksLayout.setVerticalGroup(
            panelListBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListBooksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scrollPaneBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        scrollPaneBookAuthor.getAccessibleContext().setAccessibleName("scrollPaneBookAuthor");

        mainPanel.add(panelListBooks, "panelListBooks");

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // [page] issue books

        txtSearchBook.setFont(new java.awt.Font("Tahoma", 0, 14));

        ComboBoxSearchBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboBoxSearchBook.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "Author", "Category", "ID" }));
        ComboBoxSearchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxSearchBookActionPerformed(evt);
            }
        });

        btnSearchBookIssue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearchBookIssue.setText("Search");
        btnSearchBookIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBookIssueActionPerformed(evt);
            }
        });

        // book table
        bookTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Title", "Author", "Publisher", "Category",
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookTable.setRowHeight(20);

        bookScrollPane.setViewportView(bookTable);

        searchBookLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        searchBookLabel.setText("Search Book");

        searchStudentLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        searchStudentLabel.setText("Search Member Phone");
        txtUsnSearch.setFont(new java.awt.Font("Tahoma", 0, 14));

        studentTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Phone", "Street", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentTable.setRowHeight(20);

        studentScrollPane.setViewportView(studentTable);

        btnIssue.setBackground(new java.awt.Color(153, 153, 255));
        btnIssue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnIssue.setText("Issue");
        btnIssue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIssueActionPerformed(evt);
            }
        });

        btnSearchBookIssue1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearchBookIssue1.setText("Search");
        btnSearchBookIssue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBookIssue1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Issue Book");

        javax.swing.GroupLayout panelIssueBookLayout = new javax.swing.GroupLayout(panelIssueBook);
        panelIssueBook.setLayout(panelIssueBookLayout);
        panelIssueBookLayout.setHorizontalGroup(
            panelIssueBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIssueBookLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(panelIssueBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelIssueBookLayout.createSequentialGroup()
                        .addGroup(panelIssueBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                            .addGroup(panelIssueBookLayout.createSequentialGroup()
                                .addGroup(panelIssueBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelIssueBookLayout.createSequentialGroup()
                                        .addComponent(searchBookLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ComboBoxSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSearchBookIssue)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(64, 64, 64))
                    .addGroup(panelIssueBookLayout.createSequentialGroup()
                        .addComponent(studentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    )
                    .addGroup(panelIssueBookLayout.createSequentialGroup()
                        .addComponent(searchStudentLabel)
                        .addGap(18, 18, 18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUsnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchBookIssue1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(panelIssueBookLayout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(btnIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        panelIssueBookLayout.setVerticalGroup(
            panelIssueBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIssueBookLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelIssueBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBookLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchBookIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bookScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(panelIssueBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchBookIssue1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelIssueBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelIssueBookLayout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(studentScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                )
                .addGap(18, 18, 18)
                .addComponent(btnIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );

        mainPanel.add(panelIssueBook, "panelIssueBook");

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // [Page] Return book

        scrollPaneIssuedBooks.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        // table
        issuedBooksTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        issuedBooksTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Member Name", "Issue ID", "Book ID", "Book Title", "Issue Date", "Overdue Fee"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        issuedBooksTable.setRowHeight(20);
        scrollPaneIssuedBooks.setViewportView(issuedBooksTable);
        if (issuedBooksTable.getColumnModel().getColumnCount() > 0) {
            issuedBooksTable.getColumnModel().getColumn(0).setMinWidth(20);
            issuedBooksTable.getColumnModel().getColumn(0).setPreferredWidth(20);
            issuedBooksTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        // [button] return
        btnReturn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        // [text field]
        labelUsn2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelUsn2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelUsn2.setText("Member ID");
        txtUsn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        // [button] search
        btnSearchByUsn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearchByUsn.setText("Search");
        btnSearchByUsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByUsnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 204));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Return Book");

        javax.swing.GroupLayout panelIssuedBooksLayout = new javax.swing.GroupLayout(panelIssuedBooks);
        panelIssuedBooks.setLayout(panelIssuedBooksLayout);
        panelIssuedBooksLayout.setHorizontalGroup(
                panelIssuedBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelIssuedBooksLayout.createSequentialGroup()
                                .addGroup(panelIssuedBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelIssuedBooksLayout.createSequentialGroup()
                                                .addGap(68, 68, 68)
                                                .addGroup(panelIssuedBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(scrollPaneIssuedBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(panelIssuedBooksLayout.createSequentialGroup()
                                                                .addComponent(labelUsn2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(txtUsn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(btnSearchByUsn))))
                                        .addGroup(panelIssuedBooksLayout.createSequentialGroup()
                                                .addGap(397, 397, 397)
                                                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelIssuedBooksLayout.createSequentialGroup()
                                                .addGap(388, 388, 388)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(55, Short.MAX_VALUE))
        );
        panelIssuedBooksLayout.setVerticalGroup(
                panelIssuedBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelIssuedBooksLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addGroup(panelIssuedBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelUsn2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtUsn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnSearchByUsn))
                                .addGap(18, 18, 18)
                                .addComponent(scrollPaneIssuedBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(116, Short.MAX_VALUE))
        );

        mainPanel.add(panelIssuedBooks, "panelIssuedBooks");

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // [page] returned books

        scrollPaneReturnToday.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        returnTodayTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        returnTodayTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Issue ID", "Book Title", "USN", "Issue Date", "Return Date", "Book ISBN"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        returnTodayTable.setRowHeight(20);
        scrollPaneReturnToday.setViewportView(returnTodayTable);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 0, 204));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Books to be returned Today");

        javax.swing.GroupLayout panelReturnTodayLayout = new javax.swing.GroupLayout(panelReturnToday);
        panelReturnToday.setLayout(panelReturnTodayLayout);
        panelReturnTodayLayout.setHorizontalGroup(
                panelReturnTodayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelReturnTodayLayout.createSequentialGroup()
                                .addContainerGap(68, Short.MAX_VALUE)
                                .addGroup(panelReturnTodayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReturnTodayLayout.createSequentialGroup()
                                                .addComponent(scrollPaneReturnToday, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(55, 55, 55))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReturnTodayLayout.createSequentialGroup()
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(317, 317, 317))))
        );
        panelReturnTodayLayout.setVerticalGroup(
                panelReturnTodayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelReturnTodayLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(scrollPaneReturnToday, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(157, Short.MAX_VALUE))
        );

        mainPanel.add(panelReturnToday, "panelReturnToday");

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // [page] sign up / withdrawal

        // sign up label
        signUpLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        signUpLabel.setForeground(new java.awt.Color(219, 68, 85));
        signUpLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        signUpLabel.setText("Sign Up");

        // member id
        memberIdLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        memberIdLabel.setText("Member ID");
        txtMemberId.setFont(new java.awt.Font("Tahoma", 0, 14));

        // full name
        fullNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        fullNameLabel.setText("Full Name");
        txtFullName.setFont(new java.awt.Font("Tahoma", 0, 14));

        // phone number
        phoneNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        phoneNumberLabel.setText("Phone Number");
        txtPhoneNumber.setFont(new java.awt.Font("Tahoma", 0, 14));

        // street address
        streetAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        streetAddressLabel.setText("Street Address");
        txtStreetAddress.setFont(new java.awt.Font("Tahoma", 0, 14));

        // email address
        emailAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        emailAddressLabel.setText("Email Address");
        txtEmailAddress.setFont(new java.awt.Font("Tahoma", 0, 14));

        // [button] create
        btnAddAccount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddAccount.setText("Create");
        btnAddAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        // withdrawal label
        withdrawalLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        withdrawalLabel.setForeground(new java.awt.Color(219, 68, 85));
        withdrawalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        withdrawalLabel.setText("Withdrawal");

        // member id
        withdrawalIDLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        withdrawalIDLabel.setText("Member ID");
        txtWithdrawalID.setFont(new java.awt.Font("Tahoma", 0, 14));

        // [button] withdrawal
        btnWithdrawal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnWithdrawal.setText("Withdrawal");
        btnWithdrawal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWithdrawalActionPerformed(evt);
            }
        });

        // [button] month end settlement
        btnMonthEndSettlement.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnMonthEndSettlement.setText("Month End Settlement");
        btnMonthEndSettlement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthEndSettlementActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSignUpLayout = new javax.swing.GroupLayout(panelSignUp);
        panelSignUp.setLayout(panelSignUpLayout);

        // Define Horizontal Group
        panelSignUpLayout.setHorizontalGroup(
                panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelSignUpLayout.createSequentialGroup()
                                .addGroup(panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelSignUpLayout.createSequentialGroup()

                                                .addGap(100, 100, 100)
                                                .addGroup(panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(memberIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(fullNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(phoneNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(streetAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(emailAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)

                                                                .addComponent(withdrawalIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        )
                                                )

                                                .addGap(18, 18, 18)
                                                .addGroup(panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(txtMemberId, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                        .addComponent(txtFullName, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                        .addComponent(txtPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                        .addComponent(txtStreetAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                        .addComponent(txtEmailAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)

                                                        .addComponent(txtWithdrawalID, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                )
                                        )

                                        .addGroup(panelSignUpLayout.createSequentialGroup()
                                                .addGap(279, 279, 279)
                                                .addComponent(btnAddAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelSignUpLayout.createSequentialGroup()
                                                .addGap(279, 279, 279)
                                                .addComponent(btnWithdrawal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelSignUpLayout.createSequentialGroup()
                                                .addGap(279, 279, 279)
                                                .addComponent(btnMonthEndSettlement, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelSignUpLayout.createSequentialGroup()
                                                .addGap(265, 265, 265)
                                                .addComponent(signUpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelSignUpLayout.createSequentialGroup()
                                                .addGap(265, 265, 265)
                                                .addComponent(withdrawalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        )
                                .addContainerGap(474, Short.MAX_VALUE))
        );

        // Define Vertical Group
        panelSignUpLayout.setVerticalGroup(
                panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelSignUpLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(signUpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)

                                // book title
                                .addGroup(panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtMemberId)
                                        .addComponent(memberIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // full Name
                                .addGroup(panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtFullName)
                                        .addComponent(fullNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // phone Number
                                .addGroup(panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtPhoneNumber)
                                        .addComponent(phoneNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // street address
                                .addGroup(panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtStreetAddress)
                                        .addComponent(streetAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // email address
                                .addGroup(panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtEmailAddress)
                                        .addComponent(emailAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // [button] create
                                .addComponent(btnAddAccount)
                                .addGap(50, 50, 50)

                                .addComponent(withdrawalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)

                                // member id
                                .addGroup(panelSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtWithdrawalID)
                                        .addComponent(withdrawalIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // [button] withdrawal
                                .addComponent(btnWithdrawal)
                                .addGap(50, 50, 50)

                                // [button] withdrawal
                                .addComponent(btnMonthEndSettlement)
                                .addGap(50, 50, 50)
                        )
        );

        mainPanel.add(panelSignUp, "panelSignUp");
        panelSignUp.getAccessibleContext().setAccessibleName("");
        panelSignUp.getAccessibleContext().setAccessibleDescription("");

        btnLogout.setBackground(new java.awt.Color(204, 204, 204));
        btnLogout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // [page] join group / club

        // label
        joinGroupLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        joinGroupLabel.setForeground(new java.awt.Color(219, 68, 85));
        joinGroupLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        joinGroupLabel.setText("Join Group");

        // group id
        groupIdLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        groupIdLabel.setText("Group ID");
        txtGroupId.setFont(new java.awt.Font("Tahoma", 0, 14));

        // member id
        groupMemberIdLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        groupMemberIdLabel.setText("Member ID");
        txtGroupMemberId.setFont(new java.awt.Font("Tahoma", 0, 14));

        // member age
        groupMemberAgeLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        groupMemberAgeLabel.setText("Member Age");
        txtGroupMemberAge.setFont(new java.awt.Font("Tahoma", 0, 14));

        // [button] join group
        btnJoinGroup.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnJoinGroup.setText("Join Group");
        btnJoinGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJoinGroupActionPerformed(evt);
            }
        });

        // label
        joinclubLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        joinclubLabel.setForeground(new java.awt.Color(219, 68, 85));
        joinclubLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        joinclubLabel.setText("Join Club");

        // club id
        clubIdLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        clubIdLabel.setText("Club ID");
        txtClubId.setFont(new java.awt.Font("Tahoma", 0, 14));

        // club name
        clubNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        clubNameLabel.setText("Club Name");
        txtClubName.setFont(new java.awt.Font("Tahoma", 0, 14));

        // club representative name
        clubRepresentativeNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        clubRepresentativeNameLabel.setText("Representative Name");
        txtClubRepresentativeName.setFont(new java.awt.Font("Tahoma", 0, 14));

        // club average age
        clubAverageAgeLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        clubAverageAgeLabel.setText("Average Age");
        txtClubAverageAge.setFont(new java.awt.Font("Tahoma", 0, 14));

        // club head count
        clubHeadCountLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        clubHeadCountLabel.setText("Head Count");
        txtClubHeadCount.setFont(new java.awt.Font("Tahoma", 0, 14));

        // [button] join club
        btnJoinClub.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnJoinClub.setText("Join Club");
        btnJoinClub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJoinClubActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelJoinGroupClubLayout = new javax.swing.GroupLayout(panelJoinGroupClub);
        panelJoinGroupClub.setLayout(panelJoinGroupClubLayout);

        // Define Horizontal Group
        panelJoinGroupClubLayout.setHorizontalGroup(
                panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelJoinGroupClubLayout.createSequentialGroup()
                                .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelJoinGroupClubLayout.createSequentialGroup()

                                                .addGap(100, 100, 100)
                                                .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(groupIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(groupMemberIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(groupMemberAgeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)

                                                                .addComponent(clubIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(clubNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(clubRepresentativeNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(clubAverageAgeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(clubHeadCountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                                                .addComponent(withdrawalIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        )
                                                )

                                                .addGap(18, 18, 18)
                                                .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(txtGroupId, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                        .addComponent(txtGroupMemberId, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                        .addComponent(txtGroupMemberAge, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)

                                                        .addComponent(txtClubId, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                        .addComponent(txtClubName, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                        .addComponent(txtClubRepresentativeName, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                        .addComponent(txtClubAverageAge, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                        .addComponent(txtClubHeadCount, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
//
//                                                        .addComponent(txtWithdrawalID, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                )
                                        )

                                        .addGroup(panelJoinGroupClubLayout.createSequentialGroup()
                                                .addGap(279, 279, 279)
                                                .addComponent(btnJoinGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelJoinGroupClubLayout.createSequentialGroup()
                                                .addGap(279, 279, 279)
                                                .addComponent(btnJoinClub, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelJoinGroupClubLayout.createSequentialGroup()
                                                .addGap(265, 265, 265)
                                                .addComponent(joinGroupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelJoinGroupClubLayout.createSequentialGroup()
                                                .addGap(265, 265, 265)
                                                .addComponent(joinclubLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                )
                                .addContainerGap(474, Short.MAX_VALUE))
        );

        // Define Vertical Group
        panelJoinGroupClubLayout.setVerticalGroup(
                panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelJoinGroupClubLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(joinGroupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)

                                // group id
                                .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtGroupId)
                                        .addComponent(groupIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // member id
                                .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtGroupMemberId)
                                        .addComponent(groupMemberIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // member age
                                .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtGroupMemberAge)
                                        .addComponent(groupMemberAgeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // [button] join group
                                .addComponent(btnJoinGroup)
                                .addGap(50, 50, 50)

                                // [label]
                                .addComponent(joinclubLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)

                                // club id
                                .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtClubId)
                                        .addComponent(clubIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // club name
                                .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtClubName)
                                        .addComponent(clubNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // club representative name
                                .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtClubRepresentativeName)
                                        .addComponent(clubRepresentativeNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // club average age
                                .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtClubAverageAge)
                                        .addComponent(clubAverageAgeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // club head count
                                .addGroup(panelJoinGroupClubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtClubHeadCount)
                                        .addComponent(clubHeadCountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)

                                // [button] join club
                                .addComponent(btnJoinClub)
                                .addGap(50, 50, 50)
                        )
        );

        mainPanel.add(panelJoinGroupClub, "panelJoinGroupClub");
        panelJoinGroupClub.getAccessibleContext().setAccessibleName("");
        panelJoinGroupClub.getAccessibleContext().setAccessibleDescription("");

        btnLogout.setBackground(new java.awt.Color(204, 204, 204));
        btnLogout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // [page] reserve room
        reserveRoomLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        reserveRoomLabel.setForeground(new java.awt.Color(219, 68, 85));
        reserveRoomLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reserveRoomLabel.setText("Reserve Room");

//
//        // member id
//        memberIdLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
//        memberIdLabel.setText("Member ID");
//        txtMemberId.setFont(new java.awt.Font("Tahoma", 0, 14));
//
//        // full name
//        fullNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
//        fullNameLabel.setText("Full Name");
//        txtFullName.setFont(new java.awt.Font("Tahoma", 0, 14));
//
//        // phone number
//        phoneNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
//        phoneNumberLabel.setText("Phone Number");
//        txtPhoneNumber.setFont(new java.awt.Font("Tahoma", 0, 14));
//
//        // street address
//        streetAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
//        streetAddressLabel.setText("Street Address");
//        txtStreetAddress.setFont(new java.awt.Font("Tahoma", 0, 14));
//
//        // email address
//        emailAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
//        emailAddressLabel.setText("Email Address");
//        txtEmailAddress.setFont(new java.awt.Font("Tahoma", 0, 14));
//
//        // [button] create
//        btnAddAccount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
//        btnAddAccount.setText("Create");
//        btnAddAccount.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnCreateActionPerformed(evt);
//            }
//        });
//
//        // member id
//        withdrawalIDLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
//        withdrawalIDLabel.setText("Member ID");
//        txtWithdrawalID.setFont(new java.awt.Font("Tahoma", 0, 14));
//
//        // [button] withdrawal
//        btnWithdrawal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
//        btnWithdrawal.setText("Withdrawal");
//        btnWithdrawal.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnWithdrawalActionPerformed(evt);
//            }
//        });
//
//        // [button] month end settlement
//        btnMonthEndSettlement.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
//        btnMonthEndSettlement.setText("Month End Settlement");
//        btnMonthEndSettlement.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnMonthEndSettlementActionPerformed(evt);
//            }
//        });

        javax.swing.GroupLayout panelReserveRoomLayout = new javax.swing.GroupLayout(panelReserveRoom);
        panelReserveRoom.setLayout(panelReserveRoomLayout);

        // Define Horizontal Group
        panelReserveRoomLayout.setHorizontalGroup(
                panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelReserveRoomLayout.createSequentialGroup()
                                .addGroup(panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(panelReserveRoomLayout.createSequentialGroup()

                                                                .addGap(100, 100, 100)
                                                                .addGroup(panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                                                                .addComponent(memberIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                                                .addComponent(fullNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                                                .addComponent(phoneNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                                                .addComponent(streetAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                                                .addComponent(emailAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)

//                                                                .addComponent(withdrawalIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                )
                                                                )

                                                                .addGap(18, 18, 18)
                                                                .addGroup(panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                                                        .addComponent(txtMemberId, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
//                                                        .addComponent(txtFullName, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
//                                                        .addComponent(txtPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
//                                                        .addComponent(txtStreetAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
//                                                        .addComponent(txtEmailAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
//
//                                                        .addComponent(txtWithdrawalID, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                                                )
                                                )

//                                        .addGroup(panelReserveRoomLayout.createSequentialGroup()
//                                                .addGap(279, 279, 279)
//                                                .addComponent(btnAddAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
//                                        .addGroup(panelReserveRoomLayout.createSequentialGroup()
//                                                .addGap(279, 279, 279)
//                                                .addComponent(btnWithdrawal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
//                                        .addGroup(panelReserveRoomLayout.createSequentialGroup()
//                                                .addGap(279, 279, 279)
//                                                .addComponent(btnMonthEndSettlement, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(panelReserveRoomLayout.createSequentialGroup()
                                                        .addGap(265, 265, 265)
                                                        .addComponent(reserveRoomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                )
                                .addContainerGap(474, Short.MAX_VALUE))
        );

        // Define Vertical Group
        panelReserveRoomLayout.setVerticalGroup(
                panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelReserveRoomLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(reserveRoomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
//
//                                // book title
//                                .addGroup(panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                                        .addComponent(txtMemberId)
//                                        .addComponent(memberIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                                .addGap(25, 25, 25)
//
//                                // full Name
//                                .addGroup(panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                                        .addComponent(txtFullName)
//                                        .addComponent(fullNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                                .addGap(25, 25, 25)
//
//                                // phone Number
//                                .addGroup(panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                                        .addComponent(txtPhoneNumber)
//                                        .addComponent(phoneNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                                .addGap(25, 25, 25)
//
//                                // street address
//                                .addGroup(panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                                        .addComponent(txtStreetAddress)
//                                        .addComponent(streetAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                                .addGap(25, 25, 25)
//
//                                // email address
//                                .addGroup(panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                                        .addComponent(txtEmailAddress)
//                                        .addComponent(emailAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                                .addGap(25, 25, 25)
//
//                                // [button] create
//                                .addComponent(btnAddAccount)
//                                .addGap(50, 50, 50)

//
//                                // member id
//                                .addGroup(panelReserveRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                                        .addComponent(txtWithdrawalID)
//                                        .addComponent(withdrawalIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                                .addGap(25, 25, 25)
//
//                                // [button] withdrawal
//                                .addComponent(btnWithdrawal)
//                                .addGap(50, 50, 50)
//
//                                // [button] withdrawal
//                                .addComponent(btnMonthEndSettlement)
//                                .addGap(50, 50, 50)
                        )
        );

        mainPanel.add(panelReserveRoom, "panelReserveRoom");
        panelReserveRoom.getAccessibleContext().setAccessibleName("");
        panelReserveRoom.getAccessibleContext().setAccessibleDescription("");

        btnLogout.setBackground(new java.awt.Color(204, 204, 204));
        btnLogout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // [sidebar]

        // [sidebar] add book
        btnAddBook.setBackground(new java.awt.Color(153, 102, 255));
        btnAddBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddBook.setForeground(new java.awt.Color(51, 51, 51));
        btnAddBook.setText("Add Book");
        btnAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBookActionPerformed(evt);
            }
        });

        // [sidebar] search book
        btnSearchBook.setBackground(new java.awt.Color(153, 102, 255));
        btnSearchBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearchBook.setForeground(new java.awt.Color(51, 51, 51));
        btnSearchBook.setText("Search Book");
        btnSearchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBookActionPerformed(evt);
            }
        });

        // [sidebar] list new books
        btnListBooks.setBackground(new java.awt.Color(153, 102, 255));
        btnListBooks.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnListBooks.setForeground(new java.awt.Color(51, 51, 51));
        btnListBooks.setText("List New Books");
        btnListBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListBooksActionPerformed(evt);
            }
        });

        // [sidebar] issue book
        btnIssueBook.setBackground(new java.awt.Color(153, 102, 255));
        btnIssueBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnIssueBook.setForeground(new java.awt.Color(51, 51, 51));
        btnIssueBook.setText("Issue Book");
        btnIssueBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIssueBookActionPerformed(evt);
            }
        });

        // [sidebar] return book
        btnListIssuedBooks.setBackground(new java.awt.Color(153, 102, 255));
        btnListIssuedBooks.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnListIssuedBooks.setForeground(new java.awt.Color(51, 51, 51));
        btnListIssuedBooks.setText("Return Book");
        btnListIssuedBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListIssuedBooksActionPerformed(evt);
            }
        });

        // [sidebar] book to be retured today
        btnReturnToday.setBackground(new java.awt.Color(153, 102, 255));
        btnReturnToday.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnReturnToday.setForeground(new java.awt.Color(51, 51, 51));
        btnReturnToday.setText("Book to be returned Today");
        btnReturnToday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnTodayActionPerformed(evt);
            }
        });

        // [sidebar] sign up / withdrawal
        btnSignUp.setBackground(new java.awt.Color(153, 102, 255));
        btnSignUp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSignUp.setForeground(new java.awt.Color(51, 51, 51));
        btnSignUp.setText("Sign Up / Withdrawal");
        btnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpActionPerformed(evt);
            }
        });

        // [sidebar] join group / club
        btnJoinGroupClub.setBackground(new java.awt.Color(153, 102, 255));
        btnJoinGroupClub.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnJoinGroupClub.setForeground(new java.awt.Color(51, 51, 51));
        btnJoinGroupClub.setText("Join Group / Club");
        btnJoinGroupClub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJoinGroupClubActionPerformed(evt);
            }
        });

        // [sidebar] reserve room
        btnReserveRoom.setBackground(new java.awt.Color(153, 102, 255));
        btnReserveRoom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnReserveRoom.setForeground(new java.awt.Color(51, 51, 51));
        btnReserveRoom.setText("Reserve Room");
        btnReserveRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReserveRoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearchBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnListBooks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnIssueBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnListIssuedBooks, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(btnReturnToday, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(btnSignUp, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(btnJoinGroupClub, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(btnReserveRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                )
                .addGap(10, 10, 10)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLogout)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnAddBook, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnListBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnIssueBook, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnListIssuedBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReturnToday, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnJoinGroupClub, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReserveRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                    )
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }

    private JButton getBtnAdd() {
        return btnAdd;
    }

    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    // event handler functions

    // [sidebar] add book
    private void btnAddBookActionPerformed(java.awt.event.ActionEvent evt) {
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "panelAddBook");
    }

    // [sidebar] search book
    private void btnSearchBookActionPerformed(java.awt.event.ActionEvent evt) {
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "panelSearchBook");
    }

    // [sidebar] list new books
    private void btnListBooksActionPerformed(java.awt.event.ActionEvent evt) {
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "panelListBooks");

        bookAuthorTable.setModel(dao.getTableBooks());
        if(bookAuthorTable.getModel().getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(panelListBooks, "No record Found", "Nothing Found", JOptionPane.ERROR_MESSAGE);
        }
    }

    // [sidebar] issue book
    private void btnIssueBookActionPerformed(java.awt.event.ActionEvent evt) {
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "panelIssueBook");
    }

    // [sidebar] return book
    private void btnListIssuedBooksActionPerformed(java.awt.event.ActionEvent evt) {
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "panelIssuedBooks");
    }

    // [sidebar] book to be returned today
    private void btnReturnTodayActionPerformed(java.awt.event.ActionEvent evt) {
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "panelReturnToday");

        Calendar cal = Calendar.getInstance();
        Date curDate = cal.getTime();
        returnTodayTable.setModel(dao.getBookToReturn(curDate));
        if(returnTodayTable.getModel().getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(panelReturnToday, "No book to return Today", "Message", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * @brief event handler
     * @brief [page] sign up
     * @brief [button] sidebar
     */
    private void btnSignUpActionPerformed(java.awt.event.ActionEvent evt) {
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "panelSignUp");
    }

    /**
     * @brief event handler
     * @brief [page] join group / club
     * @brief [button] sidebar
     */
    private void btnJoinGroupClubActionPerformed(java.awt.event.ActionEvent evt)
    {
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "panelJoinGroupClub");
    }

    /**
     * @brief event handler
     * @brief [page] join group / club
     * @brief [button] sidebar
     */
    private void btnReserveRoomActionPerformed(java.awt.event.ActionEvent evt)
    {
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "panelReserveRoom");
    }

    // [page] add book

    /**
     * @brief event handler
     * @brief [page] add book
     * @brief [combobox] category
     */
    private void comboBoxCategoryActionPerformed(java.awt.event.ActionEvent evt) {
        String val = (String)comboBoxCategory.getSelectedItem();
        if(!val.equals("Select"))
        {
            txtCategory.setText(val);
        }
    }

    /**
     * @brief event handler
     * @brief [page] add book
     * @brief [combobox] domestic
     */
    private void comboBoxDomesticActionPerformed(java.awt.event.ActionEvent evt) {
        String val = (String)comboBoxDomestic.getSelectedItem();
        if(!val.equals("Select"))
        {
            txtDomestic.setText(val);
        }
    }

    /**
     * @brief event handler
     * @brief [page] add book
     * @brief [button] add
     */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {
        String bookTitle = txtTitle.getText().trim();
        String authorName = txtAuthorName.getText().trim();
        String publisher = txtPublisher.getText().trim();
        String publicationDate = txtPublicationDate.getText().trim();
        String purchaseDate = txtPurchaseDate.getText().trim();
        String bookId = txtId.getText().trim();
        String category = txtCategory.getText().trim();
        String domestic = txtDomestic.getText().trim();
        boolean isDomestic;

        // inspect if fields are empty
        if (bookTitle.equals("") || authorName.equals("") || publisher.equals("") ||
                publicationDate.equals("") || purchaseDate.equals("") || category.equals("") ||
                domestic.equals("")) {
            JOptionPane.showMessageDialog(panelAddBook, "Fields can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // inspect date format: YYYY-MM-DD
        String datePattern = "\\d{4}-\\d{2}-\\d{2}";
        if (!publicationDate.matches(datePattern) || !purchaseDate.matches(datePattern)) {
            JOptionPane.showMessageDialog(panelAddBook, "Dates must be in the format YYYY-MM-DD.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // validate and convert 'domestic' to boolean
        if (domestic.equalsIgnoreCase("Domestic")) {
            isDomestic = true;
        } else if (domestic.equalsIgnoreCase("Foreign")) {
            isDomestic = false;
        } else {
            JOptionPane.showMessageDialog(panelAddBook, "Domestic/Foreign field must be 'Domestic' or 'Foreign'.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // insert to db
        if (dao.addBook(new Book(bookTitle, authorName, publisher, publicationDate, purchaseDate, bookId, category, isDomestic))) {
            JOptionPane.showMessageDialog(panelAddBook, "Book details added successfully", "Success", JOptionPane.INFORMATION_MESSAGE);

            // make text fields blank
            txtTitle.setText("");
            txtAuthorName.setText("");
            txtPublisher.setText("");
            txtPublicationDate.setText("");
            txtPurchaseDate.setText("");
            txtId.setText("");
            txtCategory.setText("");
            txtDomestic.setText("");
            comboBoxCategory.setSelectedIndex(0);
            comboBoxDomestic.setSelectedIndex(0);

        } else {
            JOptionPane.showMessageDialog(panelAddBook, "Invalid Credentials", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // [page] search book

    /**
     * @brief event handler
     * @brief [page] search book
     * @brief [combobox] title, category, author, id
     */
    private void comboBoxSearchByActionPerformed(java.awt.event.ActionEvent evt) {
        searchBy = (String)comboBoxSearchBy.getSelectedItem();
    }

    /**
     * @brief event handler
     * @brief [page] search book
     * @brief [button] search
     */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {
        if(searchBy == null)
        {
            searchBy = "Title"; //search by title default
        }

        String txt = txtSearch.getText().trim();
        if(txt.length() == 0)
        {
            JOptionPane.showMessageDialog(panelSearchBook, "Please fill in the details", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        switch(searchBy)
        {
            case    "Title":    searchTable.setModel(dao.getByTitle(txt));
                break;

            case "Category":    searchTable.setModel(dao.getByCategory(txt));
                break;

            case   "Author":    searchTable.setModel(dao.getByAuthor(txt));
                break;

            case     "Book ID":    searchTable.setModel(dao.getByIsbn(txt));
                break;
        }

        if(searchTable.getModel().getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(panelSearchBook, "No record Found", "Nothing Found", JOptionPane.ERROR_MESSAGE);
        }
    }

    // [page] list new books

    // [page] issue book

    /**
     * @brief event handler
     * @brief [page] issue book
     * @brief [combobox] title, author, category, id
     */
    private void ComboBoxSearchBookActionPerformed(java.awt.event.ActionEvent evt) {
        searchBookBy = (String)ComboBoxSearchBook.getSelectedItem();
    }

    /**
     * @brief event handler
     * @brief [page] issue book
     * @brief [button] search book
     */
    private void btnSearchBookIssueActionPerformed(java.awt.event.ActionEvent evt) {
        if(searchBookBy == null)
        {
            searchBookBy = "Title"; //search by title default
        }

        String txt = txtSearchBook.getText().trim();
        if(txt.length() == 0)
        {
            JOptionPane.showMessageDialog(panelSearchBook, "Please fill in the details", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        switch(searchBookBy)
        {
            case    "Title":    bookTable.setModel(dao.getByTitle(txt));
                break;

            case   "Author":    bookTable.setModel(dao.getByAuthor(txt));
                break;

            case "Category":    bookTable.setModel(dao.getByCategory(txt));
                break;

            case     "ID":    bookTable.setModel(dao.getByIsbn(txt));
                break;
        }

        if(bookTable.getModel().getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(panelIssueBook, "No record Found", "Nothing Found", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @brief [page] issue book
     * @brief [button] member search
     */
    private void btnSearchBookIssue1ActionPerformed(java.awt.event.ActionEvent evt) {
        String usn = txtUsnSearch.getText().trim();

        if(usn.length() != 0)
        {
            studentTable.setModel(dao.getStudentbyUsn(usn));
        }
        else
        {
            JOptionPane.showMessageDialog(panelIssueBook, "Please enter member phone number", "Invalid Credentials", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(studentTable.getModel().getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(panelIssueBook, "No record Found", "Nothing Found", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @brief event handler
     * @brief [page] issue book
     * @brief [button] issue
     */
    private void btnIssueActionPerformed(java.awt.event.ActionEvent evt) {
        int selectedBookRow = bookTable.getSelectedRow();
        int selectedStudentRow = studentTable.getSelectedRow();

        // Check if both book and student are selected
        if(selectedBookRow == -1 || selectedStudentRow == -1) {
            JOptionPane.showMessageDialog(panelIssueBook, "Please select a book and member from the table", "Invalid Operation", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String memberId = studentTable.getValueAt(selectedStudentRow, 0).toString();
        String bookId = bookTable.getValueAt(selectedBookRow, 0).toString();

        // Call the DAO method to issue the book
        if(dao.issueBook(new Issue(memberId, bookId))) {
            JOptionPane.showMessageDialog(panelIssueBook, "Book Issued Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);

            // Refresh or update the book table after the issue action
            // This could involve updating the table with the new data (e.g., reduce available quantity, etc.)
            refreshBookTable();  // You would need to implement this method to reload or update the book data in the table
        } else {
            JOptionPane.showMessageDialog(panelIssueBook, "Book is already issued to someone else.", "Invalid Operation", JOptionPane.ERROR_MESSAGE);
        }

        // Clear the text fields
        txtSearchBook.setText("");
        txtUsnSearch.setText("");

        // Clear the tables
        DefaultTableModel bookTableModel = (DefaultTableModel) bookTable.getModel();
        bookTableModel.setRowCount(0); // Clears all rows in the book table

        DefaultTableModel studentTableModel = (DefaultTableModel) studentTable.getModel();
        studentTableModel.setRowCount(0); // Clears all rows in the student table
    }

    /**
     * @brief event handler
     * @brief [page] issue book
     * @brief refresh table
     */
    private void refreshBookTable() {
        // You can fetch updated data and set it back to the table model
        // Example: bookTable.setModel(new DefaultTableModel(updatedData, columnNames));
        // Make sure to reload the data (e.g., book availability) after issuing the book
    }

    // [page] return book

    /**
     * @brief event handler
     * @brief [page] return book
     * @brief [button] search
     */
    private void btnSearchByUsnActionPerformed(java.awt.event.ActionEvent evt) {
        String usn = txtUsn.getText().trim();
        if(usn.length() == 0)
        {
            JOptionPane.showMessageDialog(panelIssueBook, "Please enter Member ID", "Invalid Member ID", JOptionPane.ERROR_MESSAGE);
            return;
        }
        issuedBooksTable.setModel(dao.listBookByUsn(usn));
        if(issuedBooksTable.getModel().getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(panelIssueBook, "No record Found", "No record", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @brief event handler
     * @brief [page] return book
     * @brief [button] return
     */
    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {
        int row = issuedBooksTable.getSelectedRow();

        // if not selected
        if(row == -1)
        {
            JOptionPane.showMessageDialog(panelIssuedBooks, "Nothing selected", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int issue_id = (int) issuedBooksTable.getModel().getValueAt(row, 1);

        if(dao.returnBook(issue_id))
        {
            JOptionPane.showMessageDialog(panelIssuedBooks, "Success", "Successfull", JOptionPane.INFORMATION_MESSAGE);
            row = -1;
        }
        else
        {
            JOptionPane.showMessageDialog(panelIssuedBooks, "Some error occured", "Error", JOptionPane.ERROR_MESSAGE);
        }

        txtUsn.setText("");
        DefaultTableModel model = (DefaultTableModel) issuedBooksTable.getModel();
        model.setRowCount(0); // Clears all rows in the issuedBooksTable
    }

    // [page] sign up / withdrawal

    /**
     * @brief event handler
     * @brief [page] sign up
     * @brief [button] create
     */
    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {
        String memberId = txtMemberId.getText().trim();
        String fullName = txtFullName.getText().trim();
        String phoneNumber = txtPhoneNumber.getText().trim();
        String streetAddress = txtStreetAddress.getText().trim();
        String emailAddress = txtEmailAddress.getText().trim();

        // inspect if fields are empty
        if (memberId.equals("") || fullName.equals("") || phoneNumber.equals("") || streetAddress.equals("") || emailAddress.equals("")) {
            JOptionPane.showMessageDialog(panelSignUp, "Fields can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // inspect date format: 000-0000-0000
        String datePattern = "\\d{3}-\\d{4}-\\d{4}";
        if (!phoneNumber.matches(datePattern)) {
            JOptionPane.showMessageDialog(panelSignUp, "Dates must be in the format 000-0000-000.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // insert to db
        if (dao.addMember(new Member(memberId, fullName, phoneNumber, streetAddress, emailAddress))) {
            JOptionPane.showMessageDialog(panelSignUp, "Account Created", "Success", JOptionPane.INFORMATION_MESSAGE);

            // make text fields blank
            txtMemberId.setText("");
            txtFullName.setText("");
            txtPhoneNumber.setText("");
            txtStreetAddress.setText("");
            txtEmailAddress.setText("");
        } else {
            JOptionPane.showMessageDialog(panelSignUp, "Invalid Credentials", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @brief event handler
     * @brief [page] sign up / withdrawal
     * @brief [button] withdrawal
     */
    private void btnWithdrawalActionPerformed(java.awt.event.ActionEvent evt) {
        String memberId = txtWithdrawalID.getText().trim();

        // inspect if fields are empty
        if (memberId.equals("")) {
            JOptionPane.showMessageDialog(panelSignUp, "Fields can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // insert to db
        if (dao.withdrawalMember(new Member(memberId, "", "", "", ""))) {
            JOptionPane.showMessageDialog(panelSignUp, "Withdrawal Request", "Success", JOptionPane.INFORMATION_MESSAGE);

            // make text fields blank
            txtWithdrawalID.setText("");
        } else {
            JOptionPane.showMessageDialog(panelSignUp, "Invalid Credentials", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @brief event handler
     * @brief [page] sign up / withdrawal
     * @brief [button] month end settlement
     * @brief func 1. delete account that is requested for withdrawal
     * @brief func 2. sort vip member
     */
    private void btnMonthEndSettlementActionPerformed(java.awt.event.ActionEvent evt) {

        // insert to db
        if (dao.deleteWithdrawnMembers() && dao.updateVipMembers()) {
//            JOptionPane.showMessageDialog(panelSignUp, "Delete Account", "Success", JOptionPane.INFORMATION_MESSAGE);

            // make text fields blank
            txtWithdrawalID.setText("");
        } else {
//            JOptionPane.showMessageDialog(panelSignUp, "Invalid Credentials", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // [page] join group / club

    /**
     * @brief [page] join group / club
     * @brief [button] join group
     */
    private void btnJoinGroupActionPerformed(java.awt.event.ActionEvent evt) {
        // Fetch user input
        String groupIdStr = txtGroupId.getText().trim();
        String memberId = txtGroupMemberId.getText().trim();
        String memberAgeStr = txtGroupMemberAge.getText().trim();

        // Check if fields are empty
        if (groupIdStr.equals("") || memberId.equals("") || memberAgeStr.equals("")) {
            JOptionPane.showMessageDialog(panelSignUp, "Fields can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Parse groupId and memberAge to integers
            int groupId = Integer.parseInt(groupIdStr);
            int memberAge = Integer.parseInt(memberAgeStr);

            // Create Group object
            Group group = new Group(groupId, memberId, memberAge);

            // Call DAO method to join group
            if (dao.joinGroup(group)) {
                JOptionPane.showMessageDialog(panelSignUp, "Joined Group", "Success", JOptionPane.INFORMATION_MESSAGE);

                // Clear text fields
                txtGroupId.setText("");
                txtGroupMemberId.setText("");
                txtGroupMemberAge.setText("");
            } else {
                JOptionPane.showMessageDialog(panelSignUp, "Failed to join group.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(panelSignUp, "Invalid number format for Group ID or Member Age.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @brief [page] join group / club
     * @brief [button] join club
     */
    private void btnJoinClubActionPerformed(java.awt.event.ActionEvent evt)
    {


        // Fetch user input
        String groupIdStr = txtGroupId.getText().trim();
        String memberId = txtGroupMemberId.getText().trim();
        String memberAgeStr = txtGroupMemberAge.getText().trim();

        // Check if fields are empty
        if (groupIdStr.equals("") || memberId.equals("") || memberAgeStr.equals("")) {
            JOptionPane.showMessageDialog(panelSignUp, "Fields can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Parse groupId and memberAge to integers
            int groupId = Integer.parseInt(groupIdStr);
            int memberAge = Integer.parseInt(memberAgeStr);

            // Create Group object
            Group group = new Group(groupId, memberId, memberAge);

            // Call DAO method to join group
            if (dao.joinGroup(group)) {
                JOptionPane.showMessageDialog(panelSignUp, "Joined Group", "Success", JOptionPane.INFORMATION_MESSAGE);

                // Clear text fields
                txtGroupId.setText("");
                txtGroupMemberId.setText("");
                txtGroupMemberAge.setText("");
            } else {
                JOptionPane.showMessageDialog(panelSignUp, "Failed to join group.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(panelSignUp, "Invalid number format for Group ID or Member Age.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // [logout]

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
        new LoginFrame().setVisible(true);
    }

    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // login frame
                // if(!LoginFrame.loggedIn)
                // {
                //     new LoginFrame().setVisible(true);
                //     return;
                // }

                // main frame
                new MainFrame().setVisible(true);
            }
        });
    }

    BookDAO dao = new BookDAO();
    String searchBy = null, searchBookBy = null;
    //int numBooks = 0;
    //String isbn, usn, title, category, name, email;
    // Variables declaration - do not modify//GEN-BEGIN:variables

    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    // sidebar
    private javax.swing.JButton btnReturnToday;
    private javax.swing.JButton btnSignUp;
    private javax.swing.JButton btnJoinGroupClub;
    private javax.swing.JButton btnReserveRoom;

    // panel
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelAddBook;
    private javax.swing.JPanel panelListBooks;
    private javax.swing.JPanel panelSearchBook;
    private javax.swing.JPanel panelIssueBook;
    private javax.swing.JPanel panelIssuedBooks;
    private javax.swing.JPanel panelReturnToday;
    private javax.swing.JPanel panelJoinGroupClub;
    private javax.swing.JPanel panelReserveRoom;
    private javax.swing.JPanel panelSignUp;

    // [Page] Add Book
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JLabel publisherLabel;
    private javax.swing.JLabel publicationDateLabel;
    private javax.swing.JLabel purchaseDateLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JLabel domesticLabel;
    private javax.swing.JTextField txtTitle;
    private javax.swing.JTextField txtAuthorName;
    private javax.swing.JTextField txtPublisher;
    private javax.swing.JTextField txtPublicationDate;
    private javax.swing.JTextField txtPurchaseDate;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtDomestic;
    private javax.swing.JComboBox<String> comboBoxCategory;
    private javax.swing.JComboBox<String> comboBoxDomestic;
    private javax.swing.JButton btnAdd;

    // [Page] sign up / withdrawal
    private javax.swing.JLabel signUpLabel;
    private javax.swing.JLabel memberIdLabel;
    private javax.swing.JLabel fullNameLabel;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JLabel streetAddressLabel;
    private javax.swing.JLabel emailAddressLabel;
    private javax.swing.JLabel withdrawalLabel;
    private javax.swing.JLabel withdrawalIDLabel;
    private javax.swing.JTextField txtMemberId;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtStreetAddress;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtWithdrawalID;
    private javax.swing.JButton btnAddAccount;
    private javax.swing.JButton btnWithdrawal;
    private javax.swing.JButton btnMonthEndSettlement;

    // [page] join group / club
    private javax.swing.JLabel joinGroupLabel;
    private javax.swing.JLabel joinclubLabel;
    private javax.swing.JLabel groupIdLabel;
    private javax.swing.JLabel groupMemberIdLabel;
    private javax.swing.JLabel groupMemberAgeLabel;
    private javax.swing.JLabel clubIdLabel;
    private javax.swing.JLabel clubNameLabel;
    private javax.swing.JLabel clubRepresentativeNameLabel;
    private javax.swing.JLabel clubHeadCountLabel;
    private javax.swing.JLabel clubAverageAgeLabel;
    private javax.swing.JTextField txtClubId;
    private javax.swing.JTextField txtGroupId;
    private javax.swing.JTextField txtGroupMemberId;
    private javax.swing.JTextField txtGroupMemberAge;
    private javax.swing.JTextField txtClubName;
    private javax.swing.JTextField txtClubRepresentativeName;
    private javax.swing.JTextField txtClubHeadCount;
    private javax.swing.JTextField txtClubAverageAge;
    private javax.swing.JButton btnJoinGroup;
    private javax.swing.JButton btnJoinClub;

    // [page] reserve room
    private javax.swing.JLabel reserveRoomLabel;

    // 정리 안 된 것들
    private javax.swing.JComboBox<String> ComboBoxSearchBook;
    private javax.swing.JTable bookAuthorTable;
    private javax.swing.JScrollPane bookScrollPane;
    private javax.swing.JTable bookTable;
    private javax.swing.JButton btnAddBook;
    private javax.swing.JButton btnIssue;
    private javax.swing.JButton btnIssueBook;
    private javax.swing.JButton btnListBooks;
    private javax.swing.JButton btnListIssuedBooks;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchBook;
    private javax.swing.JButton btnSearchBookIssue;
    private javax.swing.JButton btnSearchBookIssue1;
    private javax.swing.JButton btnSearchByUsn;
    private javax.swing.JComboBox<String> comboBoxSearchBy;

    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchBook;

    private javax.swing.JTextField txtUsn;
    private javax.swing.JTextField txtUsnSearch;

    private javax.swing.JLabel usnLabel;


    private javax.swing.JTable issuedBooksTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel labelUsn2;
    private javax.swing.JTable returnTodayTable;
    private javax.swing.JScrollPane scrollPaneBookAuthor;
    private javax.swing.JScrollPane scrollPaneIssuedBooks;
    private javax.swing.JScrollPane scrollPaneReturnToday;
    private javax.swing.JLabel searchBookLabel;
    private javax.swing.JScrollPane searchScrollPane;
    private javax.swing.JLabel searchStudentLabel;
    private javax.swing.JTable searchTable;
    private javax.swing.JScrollPane studentScrollPane;
    private javax.swing.JTable studentTable;
}
